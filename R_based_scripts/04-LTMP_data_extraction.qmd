---
title: "LTMP_data_extraction"
author: "Denisse Fierro Arcos"
date: "2024-01-19"
format: 
  gfm:
    toc: true
---

# Goal of this notebook
This notebook will demonstrate how to access the Long-Term Monitoring Program (LTMP) dataset from AIMS. The goal of the LTMP is to measure the long-term status and trend of reefs in the Great Barrier Reef (GBR) World Heritage Area. Data has been collected across the GBR for over 35 years. There are a variety of variables measured during this campaign, but they all provide information about the health of the coral reefs.    
  
You can see more information about the LTMP in our [catalogue](https://stac.reefdata.io/browser/collections/aims-ltmp-mmp-coralreef/items/aims-ltmp-mmp-coralreef-model).  
  
# Loading libraries
  
```{r}
#| results: hide
#| message: false
#| warning: false

#Accessing S3 bucket
library(arrow)
#Data manipulation
library(dplyr)
library(tidyr)
library(stringr)
#Managing dates
library(lubridate)
#Plotting
library(ggplot2)
```

# Connecting to RIMReP collection
We will connect to the LTMP dataset from AIMS stored in a S3 bucket. Depending on your internet connection, this make take a couple of minutes.  
  
```{r connect}
#Establishing connection
data_bucket <- s3_bucket("s3://gbr-dms-data-public/aims-ltmp-mmp-coralreef-model/data.parquet")

#Accessing dataset
data_df <- open_dataset(data_bucket)
```
  
## Exploring dataset structure
We can explore the dataset `schema` to understand its structure, and identify the variables that are relevant to us.  
  
```{r explore}
#Checking data structure
data_df$schema
```
    
We can see there is a `variable` column, which will give us an indication of the information included in the dataset before loading it to memory. We will check the unique values for this column.  
  
```{r}
data_df |> 
  distinct(variable) |> 
  collect()
```
  
Let's explore the `Large fishes` a bit further. We can check the time period for which we have records for this variable.  
  
```{r}
data_df |> 
  #Note that we need to write the variable exactly as it is showing above
  filter(variable == "Large fishes") |> 
  #We select the date column
  select(date) |> 
  #Turn the string to date type
  mutate(date = ymd(date)) |> 
  #Now we will get the minimum and maximum dates
  summarise(min = min(date, na.rm = T), max = max(date, na.rm = T)) |>
  collect()
```
  
We can continue exploring the dataset this way before we decide the data that is relevant to us. This helps us avoid downloading large datasets to our machines. For this exercise, we will load data for `Large fishes` collected in 2023 only.  
  
```{r}
large_fishes_23 <- data_df |> 
  #Remove geometry field. This is a big object and it will slow any process
  select(!geometry) |> 
  #Note that we need to write the variable exactly as it is showing above
  filter(variable == "Large fishes") |> 
  #Turn the string to date type
  mutate(date = ymd(date), 
         #Add a year column so we can filter data easily
         year = year(date),
         month = month(date)) |> 
  filter(year == 2023) |> 
  collect()

#Checking results
head(large_fishes_23)
```
  
We can now create a plot of mean abundance per taxa, but first we will remove rows with no taxa.  
  
```{r}
large_fishes_23 |> 
  #Remove rows with no taxa information
  drop_na(reefpage_category) |> 
  #Create box plots
  ggplot(aes(x = reefpage_category, y = mean))+
  geom_boxplot()+
  #Apply a nicer theme to the plot
  theme_bw()+
  #Fix y axis label and add title
  labs(y = "Mean abundance", title = "Mean abundance of large fishes in Northern GBR")+
  #Removing label for x axis
  theme(axis.title.x = element_blank(),
        #Center plot title
        plot.title = element_text(hjust = 0.5))
```
  
As with the other examples, you are able to save any summarised data our outputs to your computer.  
  